openapi: 3.0.1
info:
  title: iBoard 社區公佈欄(後端Spring boot)
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: 住戶 CRUD
  description: 管理員可以新增查詢修改刪除關於住戶的資料
- name: 管理員 CRUD
- name: 公共設施租借 CRUD
  description: 管理員可以新增查詢修改刪除關於公共設施的資料
- name: 公佈欄 CRUD
  description: 管理員可以新增查詢修改刪除關於公佈欄的資料
paths:
  /users/{userId}:
    get:
      tags:
      - 住戶 CRUD
      summary: 取得住戶資料
      description: 透過userId取得住戶資料並回傳前端
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - 住戶 CRUD
      summary: 修改住戶資料
      description: 透過 userId 修改住戶資料
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "404":
          description: 無此 住戶 ID，無法執行修改功能
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    delete:
      tags:
      - 住戶 CRUD
      summary: 刪除住戶資料
      description: 透過 userId 刪除住戶資料
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /packages/{packageId}:
    get:
      tags:
      - package-controller
      summary: 取得包裹資料
      description: 透過package_id取得包裹資料並回傳前端
      operationId: getPackageById
      parameters:
      - name: packageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
        "404":
          description: 無此 包裹 ID，無法執行查詢功能
    put:
      tags:
      - package-controller
      summary: 修改包裹資料
      description: 透過 package_id 修改包裹資料
      operationId: updatePakcage
      parameters:
      - name: packageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRequest'
        required: true
      responses:
        "404":
          description: 無此 包裹 ID，無法執行修改功能
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Package'
    delete:
      tags:
      - package-controller
      summary: 刪除包裹
      description: 刪除包裹資料
      operationId: deletePackage
      parameters:
      - name: packageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Package'
  /facilities/{facilityId}:
    get:
      tags:
      - 公共設施租借 CRUD
      summary: 取得設施預定情況
      description: 透過facility_id取得設施預定資料
      operationId: getFacilityById
      parameters:
      - name: facilityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Facility'
    put:
      tags:
      - 公共設施租借 CRUD
      summary: 修改預約
      description: 透過facility_id取得設施預定資料後修改
      operationId: updateFacility
      parameters:
      - name: facilityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityRequest'
        required: true
      responses:
        "404":
          description: 無此 設施 ID，無法執行修改功能
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facility'
    delete:
      tags:
      - 公共設施租借 CRUD
      summary: 刪除預約
      description: 透過facility_id刪除預約
      operationId: deleteFacility
      parameters:
      - name: facilityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Facility'
  /board/{boardId}:
    get:
      tags:
      - 公佈欄 CRUD
      summary: 取得公佈欄資料
      description: 透過board_id取得公佈欄資料
      operationId: getBoardById
      parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Board'
    put:
      tags:
      - 公佈欄 CRUD
      summary: 修改公佈欄訊息
      description: 透過 boardId 查詢訊息後修改訊息
      operationId: updateBoard
      parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
        "404":
          description: 無此 公佈欄訊息 ID，無法執行修改功能
    delete:
      tags:
      - 公佈欄 CRUD
      summary: 刪除公佈欄訊息
      description: 透過 boardId 刪除已存在訊息
      operationId: deleteBoard
      parameters:
      - name: boardId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Board'
  /admins/{adminId}:
    get:
      tags:
      - 管理員 CRUD
      summary: 透過adminId查詢管理員資料
      description: 透過adminId查詢管理員資料
      operationId: getAdminById
      parameters:
      - name: adminId
        in: path
        description: 管理員 ID 編號
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
        "404":
          description: '無此管理員 ID '
    put:
      tags:
      - 管理員 CRUD
      summary: 修改管理員資料
      description: 透過adminId先查詢是否存在，如存在該筆數據，執行修改；最後再使用adminId重新查詢該筆數據後回傳
      operationId: updateAdmin
      parameters:
      - name: adminId
        in: path
        description: 管理員 ID 編號
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequest'
        required: true
      responses:
        "404":
          description: 無此管理員 ID
        "200":
          description: OK
          content:
            application/json: {}
    delete:
      tags:
      - 管理員 CRUD
      summary: 刪除管理員資料
      description: 透過adminId刪除管理員資料
      operationId: deleteAdmin
      parameters:
      - name: adminId
        in: path
        description: 管理員 ID 編號
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /users:
    get:
      tags:
      - 住戶 CRUD
      summary: 住戶資料列表(模糊查詢+分頁+排序)
      description: 可模糊查詢姓名，依照前端請求orderBy指定項目排序(預設為創建資料時間)，依照前端請求sort指定排序順序(DESC由大到小排序)，依照前端請求limit限制每頁筆數(預設5)，依照前端請求offset設定跳過筆數(預設0，代表第一頁)。回傳總數count讓前端計算分頁。
      operationId: getUsers
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: created_date
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: desc
      - name: limit
        in: query
        required: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
          default: 5
      - name: offset
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
    post:
      tags:
      - 住戶 CRUD
      summary: 新增住戶資料
      description: 新增住戶資料，完成後回傳新增的住戶資訊
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /packages:
    post:
      tags:
      - package-controller
      summary: 新增包裹
      description: 新增包裹資料
      operationId: createPackage
      parameters:
      - name: state
        in: query
        required: false
        schema:
          type: string
          default: "0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Package'
  /facilities:
    get:
      tags:
      - 公共設施租借 CRUD
      summary: 取得設施預定列表
      description: 可模糊查詢姓名，可選擇場地，可選擇日期，可選擇時段，可以排除掉已過期資料(也可以全部都顯示)，依照前端請求orderBy指定項目排序(預設為預定日期時間)，依照前端請求sort指定排序順序(預設ASC由小到大排序)，
      operationId: getFacilities_1
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        schema:
          type: string
          enum:
          - GYM
          - MEETING_ROOM
          - TABLE_TENNIS
      - name: day
        in: query
        required: false
        schema:
          type: string
      - name: time
        in: query
        required: false
        schema:
          type: string
      - name: today
        in: query
        required: false
        schema:
          type: string
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: reserved_day
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: ASC
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facility'
    post:
      tags:
      - 公共設施租借 CRUD
      summary: 新增預約設施
      description: 新增預約設施
      operationId: getFacilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Facility'
  /board:
    get:
      tags:
      - 公佈欄 CRUD
      summary: 取得所有公佈欄資訊
      description: 取得所有公佈欄資訊
      operationId: getBoards
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
    post:
      tags:
      - 公佈欄 CRUD
      summary: 新增公佈欄訊息
      description: 新增公佈欄訊息
      operationId: createBoard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Board'
  /admins:
    get:
      tags:
      - 管理員 CRUD
      summary: 取得所有管理員
      description: 取得所有管理員資料
      operationId: getAdmins
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Admin'
    post:
      tags:
      - 管理員 CRUD
      summary: 新增管理員資料
      description: 新增管理員資料
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Admin'
components:
  schemas:
    UserRequest:
      required:
      - userAddress
      - userName
      - userTel
      type: object
      properties:
        userFaceId:
          type: string
          description: 住戶 ID
        userName:
          type: string
          description: 住戶姓名
        userTel:
          type: string
          description: 住戶聯絡電話
        userAddress:
          type: string
          description: 住戶住址
    User:
      type: object
      properties:
        userId:
          type: integer
          description: 住戶 ID
          format: int32
        userFaceId:
          type: string
          description: 住戶 人臉辨識 ID
        userName:
          type: string
          description: 住戶姓名
        userTel:
          type: string
          description: 住戶聯絡電話
        userAddress:
          type: string
          description: 住戶地址
        createdDate:
          type: string
          description: 住戶資料被建立時間
          format: date-time
        lastModifiedDate:
          type: string
          description: 住戶資料最後修改時間
          format: date-time
    PackageRequest:
      required:
      - packageName
      - packageNumber
      - userAddress
      type: object
      properties:
        userAddress:
          type: string
          description: 收件人地址
        packageName:
          type: string
          description: 收件人姓名
        packageNumber:
          type: string
          description: 包裹編號
        packageState:
          type: string
          description: 包裹狀態(0:未領取，1:已領取)
    Package:
      type: object
      properties:
        packageId:
          type: integer
          description: 包裹 ID
          format: int32
        userAddress:
          type: string
          description: 收件人地址
        packageName:
          type: string
          description: 收件人姓名
        packageNumber:
          type: string
          description: 包裹編號
        packageState:
          type: string
          description: 包裹狀態(0:未領取，1:已領取)
        createdDate:
          type: string
          description: 包裹數據建立時間
          format: date-time
        lastModifiedDate:
          type: string
          description: 包裹數據最後修改時間
          format: date-time
    FacilityRequest:
      required:
      - facilityCategory
      - reservedDay
      - reservedTime
      - userAddress
      - userName
      type: object
      properties:
        userAddress:
          type: string
          description: 預定者地址
        userName:
          type: string
          description: 預定者姓名
        facilityCategory:
          type: string
          description: 場地
          enum:
          - GYM
          - MEETING_ROOM
          - TABLE_TENNIS
        reservedDay:
          type: string
          description: 預定日期
          format: date
        reservedTime:
          type: string
          description: 預定時間
    Facility:
      type: object
      properties:
        facilityId:
          type: integer
          description: 公共設施 ID
          format: int32
        userAddress:
          type: string
          description: 租借人地址
        userName:
          type: string
          description: 租借人姓名
        facilityCategory:
          type: string
          description: 租借人租的設施
          enum:
          - GYM
          - MEETING_ROOM
          - TABLE_TENNIS
        reservedDay:
          type: string
          description: 預定的日期
          format: date
        reservedTime:
          type: string
          description: 預定的時間(ex:10:00-12:00)
        createdDate:
          type: string
          description: 創建預定數據時間
          format: date-time
        lastModifiedDate:
          type: string
          description: 最後修改預定數據時間
          format: date-time
    BoardRequest:
      required:
      - boardCategory
      - boardDescription
      - boardTitle
      type: object
      properties:
        boardCategory:
          type: string
          description: 訊息分類
          enum:
          - IMPORTANT
          - ADVERTISE
          - ACTIVITY
          - ANNOUNCEMENT
        boardTitle:
          type: string
          description: 公告title
        boardDescription:
          type: string
          description: 公告內容
    Board:
      type: object
      properties:
        boardId:
          type: integer
          description: 公佈欄 ID
          format: int32
        boardCategory:
          type: string
          description: 公佈欄 分類
          enum:
          - IMPORTANT
          - ADVERTISE
          - ACTIVITY
          - ANNOUNCEMENT
        boardTitle:
          type: string
          description: '公佈欄 標題 '
        boardDescription:
          type: string
          description: 公佈欄 內容文字
        createdDate:
          type: string
          description: 公佈欄 被創建時間
          format: date-time
        lastModifiedDate:
          type: string
          description: 公佈欄 最後被修改時間
          format: date-time
    AdminRequest:
      required:
      - adminAccount
      - adminAddress
      - adminEmail
      - adminName
      - adminPassword
      - adminTel
      type: object
      properties:
        adminAccount:
          type: string
          description: 管理員帳號
        adminPassword:
          type: string
          description: 管理員密碼
        adminName:
          type: string
          description: 管理員姓名
        adminTel:
          type: string
          description: 管理員電話
        adminEmail:
          type: string
          description: 管理員信箱
        adminAddress:
          type: string
          description: 管理員地址
    Admin:
      type: object
      properties:
        adminId:
          type: integer
          description: 管理員 ID
          format: int32
        adminAccount:
          type: string
          description: 管理員帳號
        adminPassword:
          type: string
          description: 管理員密碼
        adminName:
          type: string
          description: 管理員姓名
        adminTel:
          type: string
          description: 管理員電話
        adminEmail:
          type: string
          description: 管理員 email
        adminAddress:
          type: string
          description: 管理員地址
        createdDate:
          type: string
          description: 管理員資料被創建時間
          format: date-time
        lastModifiedDate:
          type: string
          description: 管理員資料最後修改時間
          format: date-time
    PageUser:
      type: object
      properties:
        limit:
          type: integer
          description: 限制資料庫回傳筆數(每個分頁要顯示幾筆數據)
          format: int32
        offset:
          type: integer
          description: 跳過幾筆數據(例如limit預設=5，第一頁offset=0，第二頁offset=5....)
          format: int32
        total:
          type: integer
          description: 查詢結果筆數，計算分頁數量用
          format: int32
        results:
          type: array
          description: 住戶資料集
          items:
            $ref: '#/components/schemas/User'
